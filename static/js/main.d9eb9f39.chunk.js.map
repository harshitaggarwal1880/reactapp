{"version":3,"sources":["Components/StateInput.js","Components/Navbar.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["StateInput","props","_useState","useState","_useState2","Object","slicedToArray","text","setText","react_default","a","createElement","className","heading","id","rows","value","onChange","event","target","style","backgroundColor","mode","color","onClick","toUpperCase","showAlert","toLowerCase","split","length","Navbar","concat","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","role","class","toggleMode","htmlfor","Alert","alert","word","lower","charAt","slice","capitalise","msg","App","setMode","_useState3","_useState4","setAlert","setTimeout","Fragment","Components_Navbar","document","body","title","Components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.d9eb9f39.chunk.js","sourcesContent":["// import React from \"react\";\r\n\r\n\r\n// What Is State ? \r\n\r\n// React components has a built-in state object.\r\n\r\n// The state object is where you store property values that belongs to the component.\r\n\r\n// When the state object changes, the component re-renders.\r\n   \r\n\r\n// syntax for class based component and function based component is little bit change \r\n\r\n// In this file , we talk about state for function based conmponent \r\n\r\n\r\n\r\n\r\n\r\nimport React, {useState} from 'react';    // here we import useState hook from react \r\n\r\n// Hooks  : Hooks are a new addition in React 16.8. They let you use state and other React features without writing a class. means hook are very usefull for function based components\r\n\r\n\r\n\r\n// What is React useState Hook ? \r\n\r\n// The React useState Hook allows us to track state in a function component.\r\n\r\n// State generally refers to data or properties that need to be tracking in an application.\r\n\r\n\r\n\r\n\r\nexport default function StateInput(props) {\r\n  \r\n  const Click = ()=>{\r\n    // console.log(\"Uppercase was clicked\");\r\n\r\n    setText(text.toUpperCase());     // here using setText method, we set the changes in text state\r\n\r\n    // setCar({color: \"Blue\"});   // here we change property of state car object \r\n\r\n    props.showAlert(\"Converted to UpperCase\", \"success\")\r\n\r\n  }\r\n\r\n\r\n  const Click2 = () =>{\r\n\r\n\r\n      setText(text.toLowerCase())\r\n\r\n      props.showAlert(\"Converted to LowerCase\", \"success\")\r\n\r\n\r\n  }\r\n\r\n\r\n  const Click3 = () =>{\r\n\r\n    setText(\"\")\r\n\r\n    props.showAlert(\"All Text has been Cleared\", \"success\")\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  const Changefunc = (event)=>{       // In react , in event listener return an event object , by using event object , we can use element properties/attributes\r\n    \r\n    setText(event.target.value);      // here we get value of input after changing/typing using event object \r\n    \r\n    // console.log(text);\r\n  }\r\n\r\n\r\n\r\n  const [text, setText] = useState(\"InitiGFal text\");   // state \r\n  // text = \"new text\";  // Wrong way to change the state\r\n  // setText(\"text change\")  // correct method to change the state \r\n  \r\n  // const[car, setCar] = useState({    // set object\r\n  //   brand: \"Ford\", \r\n  //   model: \"Mustang\",\r\n  //   year: 1903,\r\n  //   color: \"red\"\r\n  // });\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"form-group m-3\">\r\n        <h1>{props.heading}</h1>   \r\n        {/* <label for=\"exampleFormControlTextarea1\">Example textarea</label> */}  \r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"exampleFormControlTextarea1\"\r\n          rows=\"8\"\r\n          value={text}\r\n          onChange={Changefunc}\r\n          style={{backgroundColor: props.mode===\"dark\" ? \"#141619\" : \"white\" , color: props.mode===\"light\" ? \"black\" : \"white\"}}\r\n        \r\n        ></textarea>\r\n\r\n      </div>\r\n\r\n      <button className='btn btn-primary m-1' onClick={Click}> Convert to Uppercase </button> \r\n\r\n      <button className='btn btn-primary m-1' onClick={Click2}> Convert to Lowercase </button> \r\n\r\n      <button className='btn btn-primary m-1' onClick={Click3}> Clear </button> \r\n\r\n      <h3 className='m-3'> Text Summary </h3> \r\n\r\n      <p className='m-3'> {text.split(\" \").length} Words and {text.length} Characters </p> \r\n\r\n      <h3 className='m-3'>Preview</h3> \r\n\r\n      <p> {text.length>0 ? text : \"Please Enter Some Text\"} </p>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport {Link} from \"react-router-dom\"\r\n\r\n// Navbar Component from bootstrap \r\nfunction Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"\">\r\n            Navbar\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a               // here we use Link with to attribute to link page with react router, Instead of a with href , a with href load our page with new files\r\n                  className=\"nav-link active\"\r\n                  aria-current=\"page\"\r\n                  href=\"\"\r\n                >\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"\">\r\n                  About\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item dropdown\">\r\n                <a\r\n                  className=\"nav-link dropdown-toggle\"\r\n                  href=\"https://www.google.com/\"\r\n                  role=\"button\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Dropdown\r\n                </a>\r\n                <ul className=\"dropdown-menu\">\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"https://www.google.com/\">\r\n                      Action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"https://www.google.com/\">\r\n                      Another action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <hr className=\"dropdown-divider\" />\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"https://www.google.com/\">\r\n                      Something else here\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"https://www.google.com/\" className=\"nav-link disabled\">\r\n                  Disabled\r\n                </a>\r\n              </li>\r\n            </ul>\r\n\r\n            \r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n\r\n\r\n            {/* here we use javascript in class , so we use curly brackets and backticks to use variable in string  */}\r\n            <div class={`form-check form-switch text-${props.mode===\"light\" ? \"dark\" : \"light\"}`}>  \r\n              <input type=\"checkbox\" onClick={props.toggleMode} className=\"form-check-input\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;    \r\n","import React from 'react'\r\nimport \"./Alert.css\"\r\n\r\n\r\nfunction Alert(props) {\r\n    \r\n\r\n    const capitalise = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n  \r\n    return (\r\n    \r\n    // here we use js logical operation to check props.alert is nul , then JSX will not evaluate , otherwise it run. \r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n     <strong> {capitalise(props.alert.type)} </strong> : {props.alert.msg} \r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Alert","// import logo from './logo.svg';\r\nimport './App.css';\r\n\r\n// import Car from \"./Components/Classcomponent\";\r\nimport State from \"./Components/StateInput\";      // Import state component\r\nimport Navbar from './Components/Navbar';     // Import Navbar component \r\n// import DarkMode from './Components/DarkMode';   // Import DarkMode Component\r\nimport { useState } from 'react';\r\nimport Alert from './Components/Alert';\r\n\r\n\r\n\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   // Switch,   latest version of react-router-dom does not need a \"switch\" and the structure is different, we use Routes in place of Switch. \r\n//   Route,\r\n//   Routes\r\n//   // Link\r\n// } from \"react-router-dom\";\r\nimport React from 'react';\r\n\r\n\r\n\r\n\r\n\r\n// All Changes we have to done in app.js, then using using this file index.js render this file to show main result\r\n\r\n\r\n// Default React Screen function\r\n// function App() {    \r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header className=\"App-header\">\r\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//         <p>\r\n//           Edit <code>src/App.js</code> and save to reload.\r\n//         </p>\r\n//         <a\r\n//           className=\"App-link\"\r\n//           href=\"https://reactjs.org\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//         >\r\n//           Learn React\r\n//         </a>\r\n//       </header>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nfunction App(){\r\n\r\n\r\n  const [mode , setMode] = useState(\"light\");\r\n\r\n\r\n  const [alert, setAlert] = useState(null)\r\n\r\n  const showAlert = (text , type) =>{\r\n      setAlert({\r\n          msg: text, \r\n          type: type\r\n      })\r\n      \r\n      setTimeout(() => {\r\n          setAlert(null);\r\n      }, 1500);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const toggleMode = () =>{\r\n    if(mode===\"light\"){\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"#042343\";\r\n      document.body.style.color=\"white\";\r\n      showAlert(\"Dark Mode has been Enabled\", \"success\");   // show dismisable alert box \r\n      document.title=\"Textutils-DarkMode\"   // change title on swiching dark mode\r\n    }\r\n    else{\r\n      setMode(\"light\")\r\n      document.body.style.backgroundColor = \"white\";\r\n      document.body.style.color=\"black\";\r\n      showAlert(\"Dark Mode has been Disabled\", \"success\");   // show dismisable alert box\r\n      document.title=\"Textutils-LightMode\"     // change title on switching light mode\r\n    }\r\n  }\r\n\r\n\r\n  return(\r\n    \r\n    <>\r\n        <Navbar mode={mode} toggleMode={toggleMode}/>\r\n        <Alert alert={alert} /> \r\n        <State heading=\"Text Area\" mode={mode} showAlert={showAlert} />\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}